
services:
  observability:
    image: observability
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: app_service
    environment:
      NODE_ENV: production
      DB_HOST: database    
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - .env
    ports:
      - 3000:3000
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app_network

  database:
    build:
      context: ./src/infra/database
      dockerfile: Dockerfile
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    environment:
      DB_HOST: database    
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - 5432:5432
    volumes:
      - ./src/infra/database/data:/var/lib/postgresql/data
    healthcheck:  # âœ… Add health check to ensure PostgreSQL is ready
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 5s
      retries: 5
      start_period: 10s
    networks:
      - app_network
  
volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge